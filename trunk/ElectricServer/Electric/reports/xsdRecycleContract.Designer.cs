//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5448
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Electric.reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RecycleContract")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RecycleContract : global::System.Data.DataSet {
        
        private dtRecycleContractItemDataTable tabledtRecycleContractItem;
        
        private dtRecycleContractHeadDataTable tabledtRecycleContractHead;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RecycleContract() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RecycleContract(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtRecycleContractItem"] != null)) {
                    base.Tables.Add(new dtRecycleContractItemDataTable(ds.Tables["dtRecycleContractItem"]));
                }
                if ((ds.Tables["dtRecycleContractHead"] != null)) {
                    base.Tables.Add(new dtRecycleContractHeadDataTable(ds.Tables["dtRecycleContractHead"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtRecycleContractItemDataTable dtRecycleContractItem {
            get {
                return this.tabledtRecycleContractItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtRecycleContractHeadDataTable dtRecycleContractHead {
            get {
                return this.tabledtRecycleContractHead;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RecycleContract cln = ((RecycleContract)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtRecycleContractItem"] != null)) {
                    base.Tables.Add(new dtRecycleContractItemDataTable(ds.Tables["dtRecycleContractItem"]));
                }
                if ((ds.Tables["dtRecycleContractHead"] != null)) {
                    base.Tables.Add(new dtRecycleContractHeadDataTable(ds.Tables["dtRecycleContractHead"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtRecycleContractItem = ((dtRecycleContractItemDataTable)(base.Tables["dtRecycleContractItem"]));
            if ((initTable == true)) {
                if ((this.tabledtRecycleContractItem != null)) {
                    this.tabledtRecycleContractItem.InitVars();
                }
            }
            this.tabledtRecycleContractHead = ((dtRecycleContractHeadDataTable)(base.Tables["dtRecycleContractHead"]));
            if ((initTable == true)) {
                if ((this.tabledtRecycleContractHead != null)) {
                    this.tabledtRecycleContractHead.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RecycleContract";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RecycleContract.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtRecycleContractItem = new dtRecycleContractItemDataTable();
            base.Tables.Add(this.tabledtRecycleContractItem);
            this.tabledtRecycleContractHead = new dtRecycleContractHeadDataTable();
            base.Tables.Add(this.tabledtRecycleContractHead);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtRecycleContractItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtRecycleContractHead() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RecycleContract ds = new RecycleContract();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtRecycleContractItemRowChangeEventHandler(object sender, dtRecycleContractItemRowChangeEvent e);
        
        public delegate void dtRecycleContractHeadRowChangeEventHandler(object sender, dtRecycleContractHeadRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtRecycleContractItemDataTable : global::System.Data.TypedTableBase<dtRecycleContractItemRow> {
            
            private global::System.Data.DataColumn columnModel;
            
            private global::System.Data.DataColumn columnPowerRating;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnBuyPower;
            
            private global::System.Data.DataColumn columnSubsidy;
            
            private global::System.Data.DataColumn columnSumPrice;
            
            private global::System.Data.DataColumn columnNo;
            
            private global::System.Data.DataColumn columnQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractItemDataTable() {
                this.TableName = "dtRecycleContractItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRecycleContractItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtRecycleContractItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PowerRatingColumn {
                get {
                    return this.columnPowerRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuyPowerColumn {
                get {
                    return this.columnBuyPower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubsidyColumn {
                get {
                    return this.columnSubsidy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumPriceColumn {
                get {
                    return this.columnSumPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoColumn {
                get {
                    return this.columnNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractItemRow this[int index] {
                get {
                    return ((dtRecycleContractItemRow)(this.Rows[index]));
                }
            }
            
            public event dtRecycleContractItemRowChangeEventHandler dtRecycleContractItemRowChanging;
            
            public event dtRecycleContractItemRowChangeEventHandler dtRecycleContractItemRowChanged;
            
            public event dtRecycleContractItemRowChangeEventHandler dtRecycleContractItemRowDeleting;
            
            public event dtRecycleContractItemRowChangeEventHandler dtRecycleContractItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtRecycleContractItemRow(dtRecycleContractItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractItemRow AdddtRecycleContractItemRow(string Model, decimal PowerRating, decimal UnitPrice, decimal Price, decimal BuyPower, decimal Subsidy, decimal SumPrice, string No, int Qty) {
                dtRecycleContractItemRow rowdtRecycleContractItemRow = ((dtRecycleContractItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Model,
                        PowerRating,
                        UnitPrice,
                        Price,
                        BuyPower,
                        Subsidy,
                        SumPrice,
                        No,
                        Qty};
                rowdtRecycleContractItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtRecycleContractItemRow);
                return rowdtRecycleContractItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtRecycleContractItemDataTable cln = ((dtRecycleContractItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtRecycleContractItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnModel = base.Columns["Model"];
                this.columnPowerRating = base.Columns["PowerRating"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnPrice = base.Columns["Price"];
                this.columnBuyPower = base.Columns["BuyPower"];
                this.columnSubsidy = base.Columns["Subsidy"];
                this.columnSumPrice = base.Columns["SumPrice"];
                this.columnNo = base.Columns["No"];
                this.columnQty = base.Columns["Qty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnModel = new global::System.Data.DataColumn("Model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel);
                this.columnPowerRating = new global::System.Data.DataColumn("PowerRating", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerRating);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnBuyPower = new global::System.Data.DataColumn("BuyPower", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyPower);
                this.columnSubsidy = new global::System.Data.DataColumn("Subsidy", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubsidy);
                this.columnSumPrice = new global::System.Data.DataColumn("SumPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumPrice);
                this.columnNo = new global::System.Data.DataColumn("No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractItemRow NewdtRecycleContractItemRow() {
                return ((dtRecycleContractItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtRecycleContractItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtRecycleContractItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtRecycleContractItemRowChanged != null)) {
                    this.dtRecycleContractItemRowChanged(this, new dtRecycleContractItemRowChangeEvent(((dtRecycleContractItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtRecycleContractItemRowChanging != null)) {
                    this.dtRecycleContractItemRowChanging(this, new dtRecycleContractItemRowChangeEvent(((dtRecycleContractItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtRecycleContractItemRowDeleted != null)) {
                    this.dtRecycleContractItemRowDeleted(this, new dtRecycleContractItemRowChangeEvent(((dtRecycleContractItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtRecycleContractItemRowDeleting != null)) {
                    this.dtRecycleContractItemRowDeleting(this, new dtRecycleContractItemRowChangeEvent(((dtRecycleContractItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtRecycleContractItemRow(dtRecycleContractItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecycleContract ds = new RecycleContract();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtRecycleContractItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtRecycleContractHeadDataTable : global::System.Data.TypedTableBase<dtRecycleContractHeadRow> {
            
            private global::System.Data.DataColumn columnPartnerName;
            
            private global::System.Data.DataColumn columnPartnerAddress;
            
            private global::System.Data.DataColumn columnOrganizationName;
            
            private global::System.Data.DataColumn columnOrganizationAddress;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnAmountInWords;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractHeadDataTable() {
                this.TableName = "dtRecycleContractHead";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRecycleContractHeadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtRecycleContractHeadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartnerNameColumn {
                get {
                    return this.columnPartnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartnerAddressColumn {
                get {
                    return this.columnPartnerAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganizationNameColumn {
                get {
                    return this.columnOrganizationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganizationAddressColumn {
                get {
                    return this.columnOrganizationAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountInWordsColumn {
                get {
                    return this.columnAmountInWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractHeadRow this[int index] {
                get {
                    return ((dtRecycleContractHeadRow)(this.Rows[index]));
                }
            }
            
            public event dtRecycleContractHeadRowChangeEventHandler dtRecycleContractHeadRowChanging;
            
            public event dtRecycleContractHeadRowChangeEventHandler dtRecycleContractHeadRowChanged;
            
            public event dtRecycleContractHeadRowChangeEventHandler dtRecycleContractHeadRowDeleting;
            
            public event dtRecycleContractHeadRowChangeEventHandler dtRecycleContractHeadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtRecycleContractHeadRow(dtRecycleContractHeadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractHeadRow AdddtRecycleContractHeadRow(string PartnerName, string PartnerAddress, string OrganizationName, string OrganizationAddress, decimal Price, decimal AmountInWords) {
                dtRecycleContractHeadRow rowdtRecycleContractHeadRow = ((dtRecycleContractHeadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PartnerName,
                        PartnerAddress,
                        OrganizationName,
                        OrganizationAddress,
                        Price,
                        AmountInWords};
                rowdtRecycleContractHeadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtRecycleContractHeadRow);
                return rowdtRecycleContractHeadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtRecycleContractHeadDataTable cln = ((dtRecycleContractHeadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtRecycleContractHeadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPartnerName = base.Columns["PartnerName"];
                this.columnPartnerAddress = base.Columns["PartnerAddress"];
                this.columnOrganizationName = base.Columns["OrganizationName"];
                this.columnOrganizationAddress = base.Columns["OrganizationAddress"];
                this.columnPrice = base.Columns["Price"];
                this.columnAmountInWords = base.Columns["AmountInWords"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPartnerName = new global::System.Data.DataColumn("PartnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartnerName);
                this.columnPartnerAddress = new global::System.Data.DataColumn("PartnerAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartnerAddress);
                this.columnOrganizationName = new global::System.Data.DataColumn("OrganizationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganizationName);
                this.columnOrganizationAddress = new global::System.Data.DataColumn("OrganizationAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganizationAddress);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnAmountInWords = new global::System.Data.DataColumn("AmountInWords", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountInWords);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractHeadRow NewdtRecycleContractHeadRow() {
                return ((dtRecycleContractHeadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtRecycleContractHeadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtRecycleContractHeadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtRecycleContractHeadRowChanged != null)) {
                    this.dtRecycleContractHeadRowChanged(this, new dtRecycleContractHeadRowChangeEvent(((dtRecycleContractHeadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtRecycleContractHeadRowChanging != null)) {
                    this.dtRecycleContractHeadRowChanging(this, new dtRecycleContractHeadRowChangeEvent(((dtRecycleContractHeadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtRecycleContractHeadRowDeleted != null)) {
                    this.dtRecycleContractHeadRowDeleted(this, new dtRecycleContractHeadRowChangeEvent(((dtRecycleContractHeadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtRecycleContractHeadRowDeleting != null)) {
                    this.dtRecycleContractHeadRowDeleting(this, new dtRecycleContractHeadRowChangeEvent(((dtRecycleContractHeadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtRecycleContractHeadRow(dtRecycleContractHeadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecycleContract ds = new RecycleContract();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtRecycleContractHeadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtRecycleContractItemRow : global::System.Data.DataRow {
            
            private dtRecycleContractItemDataTable tabledtRecycleContractItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRecycleContractItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtRecycleContractItem = ((dtRecycleContractItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Model {
                get {
                    try {
                        return ((string)(this[this.tabledtRecycleContractItem.ModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“Model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.ModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PowerRating {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRecycleContractItem.PowerRatingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“PowerRating”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.PowerRatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRecycleContractItem.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“UnitPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRecycleContractItem.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“Price”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BuyPower {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRecycleContractItem.BuyPowerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“BuyPower”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.BuyPowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Subsidy {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRecycleContractItem.SubsidyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“Subsidy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.SubsidyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SumPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRecycleContractItem.SumPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“SumPrice”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.SumPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string No {
                get {
                    try {
                        return ((string)(this[this.tabledtRecycleContractItem.NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“No”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Qty {
                get {
                    try {
                        return ((int)(this[this.tabledtRecycleContractItem.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractItem”中列“Qty”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractItem.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNull() {
                return this.IsNull(this.tabledtRecycleContractItem.ModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNull() {
                this[this.tabledtRecycleContractItem.ModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPowerRatingNull() {
                return this.IsNull(this.tabledtRecycleContractItem.PowerRatingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPowerRatingNull() {
                this[this.tabledtRecycleContractItem.PowerRatingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tabledtRecycleContractItem.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tabledtRecycleContractItem.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tabledtRecycleContractItem.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tabledtRecycleContractItem.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuyPowerNull() {
                return this.IsNull(this.tabledtRecycleContractItem.BuyPowerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuyPowerNull() {
                this[this.tabledtRecycleContractItem.BuyPowerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubsidyNull() {
                return this.IsNull(this.tabledtRecycleContractItem.SubsidyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubsidyNull() {
                this[this.tabledtRecycleContractItem.SubsidyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumPriceNull() {
                return this.IsNull(this.tabledtRecycleContractItem.SumPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumPriceNull() {
                this[this.tabledtRecycleContractItem.SumPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoNull() {
                return this.IsNull(this.tabledtRecycleContractItem.NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoNull() {
                this[this.tabledtRecycleContractItem.NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tabledtRecycleContractItem.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tabledtRecycleContractItem.QtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtRecycleContractHeadRow : global::System.Data.DataRow {
            
            private dtRecycleContractHeadDataTable tabledtRecycleContractHead;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRecycleContractHeadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtRecycleContractHead = ((dtRecycleContractHeadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartnerName {
                get {
                    try {
                        return ((string)(this[this.tabledtRecycleContractHead.PartnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractHead”中列“PartnerName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractHead.PartnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartnerAddress {
                get {
                    try {
                        return ((string)(this[this.tabledtRecycleContractHead.PartnerAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractHead”中列“PartnerAddress”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractHead.PartnerAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganizationName {
                get {
                    try {
                        return ((string)(this[this.tabledtRecycleContractHead.OrganizationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractHead”中列“OrganizationName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractHead.OrganizationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrganizationAddress {
                get {
                    try {
                        return ((string)(this[this.tabledtRecycleContractHead.OrganizationAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractHead”中列“OrganizationAddress”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractHead.OrganizationAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRecycleContractHead.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractHead”中列“Price”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractHead.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountInWords {
                get {
                    try {
                        return ((decimal)(this[this.tabledtRecycleContractHead.AmountInWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtRecycleContractHead”中列“AmountInWords”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtRecycleContractHead.AmountInWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartnerNameNull() {
                return this.IsNull(this.tabledtRecycleContractHead.PartnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartnerNameNull() {
                this[this.tabledtRecycleContractHead.PartnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartnerAddressNull() {
                return this.IsNull(this.tabledtRecycleContractHead.PartnerAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartnerAddressNull() {
                this[this.tabledtRecycleContractHead.PartnerAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganizationNameNull() {
                return this.IsNull(this.tabledtRecycleContractHead.OrganizationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganizationNameNull() {
                this[this.tabledtRecycleContractHead.OrganizationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganizationAddressNull() {
                return this.IsNull(this.tabledtRecycleContractHead.OrganizationAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganizationAddressNull() {
                this[this.tabledtRecycleContractHead.OrganizationAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tabledtRecycleContractHead.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tabledtRecycleContractHead.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountInWordsNull() {
                return this.IsNull(this.tabledtRecycleContractHead.AmountInWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountInWordsNull() {
                this[this.tabledtRecycleContractHead.AmountInWordsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtRecycleContractItemRowChangeEvent : global::System.EventArgs {
            
            private dtRecycleContractItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractItemRowChangeEvent(dtRecycleContractItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtRecycleContractHeadRowChangeEvent : global::System.EventArgs {
            
            private dtRecycleContractHeadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractHeadRowChangeEvent(dtRecycleContractHeadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRecycleContractHeadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591